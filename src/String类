1、String对象的初始化
 String s = “abc”;
 s = “Java语言”;
其实按照面向对象的标准语法，其格式应该为：
 String s = new String(“abc”);
 s = new String(“Java语言”);

2、字符串的常见操作
a、charAt方法
该方法的作用是按照索引值(规定字符串中第一个字符的索引值是0，第二个字符的索引值是1，依次类推)，获得字符串中的指定字符。

b、compareTo方法
该方法的作用是比较两个字符串的大小，比较的原理是依次比较每个字符的字符编码。首先比较两个字符串的第一个字符，如果第一个字符串的字符编码大于第二个的字符串的字符编码，则返回大于0的值，如果小于则返回小于0的值，如果相等则比较后续的字符，如果两个字符串中的字符编码完全相同则返回0。

c、concat方法
该方法的作用是进行字符串的连接，将两个字符串连接以后形成一个新的字符串。

d、endsWith方法
该方法的作用是判断字符串是否以某个字符串结尾，如果以对应的字符串结尾，则返回true。

e、equals方法
该方法的作用是判断两个字符串对象的内容是否相同。如果相同则返回true，否则返回false。

f、getBytes方法
该方法的作用是将字符串转换为对应的byte数组，从而便于数据的存储和传输。

g、indexOf方法
该方法的作用是查找特定字符或字符串在当前字符串中的起始位置，如果不存在则返回-1。

h、length方法
该方法的作用是返回字符串的长度，也就是返回字符串中字符的个数。中文字符也是一个字符。

i、replace方法
该方法的作用是替换字符串中所有指定的字符，然后生成一个新的字符串。经过该方法调用以后，原来的字符串不发生改变。
如果需要将字符串中某个指定的字符串替换为其它字符串，则可以使用replaceAll方法
如果只需要替换第一个出现的指定字符串时，可以使用replaceFirst方法

j、split方法
该方法的作用是以特定的字符串作为间隔，拆分当前字符串的内容，一般拆分以后会获得一个字符串数组。

k、startsWith方法
该方法的作用和endsWith方法类似，只是该方法是判断字符串是否以某个字符串作为开始。

l、substring方法
该方法的作用是取字符串中的“子串”，所谓“子串”即字符串中的一部分。

n、toLowerCase方法
该方法的作用是将字符串中所有大写字符都转换为小写。

o、trim方法
该方法的作用是去掉字符串开始和结尾的所有空格，然后形成一个新的字符串。

p、valueOf方法
该方法的作用是将其它类型的数据转换为字符串类型。
 int n = 10;
 String s = String.valueOf(n);